name: CI

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    backend:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./backend

        steps:
            - uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: "1.23"

            - name: Cache Go modules
              uses: actions/cache@v4
              with:
                  path: ~/go/pkg/mod
                  key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
                  restore-keys: |
                      ${{ runner.os }}-go-

            - name: Install dependencies
              run: go mod download

            - name: Check for outdated dependencies
              run: go mod tidy

            - name: Install golangci-lint
              run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

            - name: Run golangci-lint
              run: golangci-lint run

            - name: Run tests with coverage
              run: go test -v -coverprofile=coverage.out ./...

            - name: Build
              run: go build -v ./...

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: backend-binary
                  path: ./backend
                  retention-days: 5

    frontend:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./frontend

        strategy:
            matrix:
                node-version: ["22"]

        steps:
            - uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Cache npm dependencies
              uses: actions/cache@v4
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Install dependencies
              run: npm ci

            - name: Run linter
              run: npm run lint

            - name: Run tests with coverage
              run: npm test -- --coverage

            - name: Build
              run: npm run build

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: frontend-build
                  path: ./frontend/dist
                  retention-days: 5
